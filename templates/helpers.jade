- function getUrl(url) {
-     return url && !/^https?:\/\//i.test(url) ? (siteUrl.replace(/\/$/, '') + '/' + url.replace(/^\//g, '')) : url
- }

//- --
//- --
//- --

- function carveDescription(input) {
-     return input.split(/^!\[/m)[0].trim().split(/\n/m)[0].trim()
- }

- function stripMD(input) {
-     return input.replace(/^\s*[#*\d]/g, '').replace(/\[(.*?)\]\(.*?\)/g, '$1').replace(/\*\*(.*?)\*\*/g, '$1').replace(/_(.*?)_/g, '$1')
- }

- function stripHTML(input) {
-     return input.replace(/<.+?>(.*?)<\/.+?>/mg, '$1').replace(/<.+?\/?>/mg, '')
- }

- function inlineDescription(input) {
-     return input.replace(/\n+/mg, ' ')
- }

- function trimDescription(input) {
-     return input.trim()
- }

//- --
//- --
//- --

- function carveImage(input) {
-     return input.replace(/\n+/mg, '').replace(/.*?!\[.*?\]\((.*?)\).*/, '$1').replace(/^(?!\/).+/, '').trim()
- }

- function buildImageUrl(url) {
-     return url ? (siteUrl.replace(/\/$/) + '/' + url.replace(/^\//g, '')) : null
- }

//- --
//- --
//- --

- function retrievePageDescriptionFromMarkdown(page) {
-     return trimDescription(inlineDescription(stripHTML(stripMD(carveDescription(page.markdown)))))
- }

- function retrievePageImageFromMarkdown(page) {
-     return buildImageUrl(carveImage(page.markdown))
- }

//- --
//- --
//- --

- function titleCase(input) {
-     return input.replace(/-/g, ' ').replace(/\w\S*/g, function(token) {
-         return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase()
-     })
- }

//- --
