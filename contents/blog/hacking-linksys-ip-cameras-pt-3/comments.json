[
  {
    "author": "gat3way",
    "avatar": "8bfed58b974a83cecf91c84e3c2eb6d0",
    "date": "2009-04-23T07:38:26.000Z",
    "content": "Even if you find a file upload vulnerability, I doubt that it would be possible to overwrite anything in /etc/init.d (since it's root-owned and I doubt the webserver runs with uid=0/euid=0). Furthermore, AFAIK it's a cramfs filesystem which does not support writes at all. \r\n\r\nBut probably this could be circumvented by uploading a new modified firmwire somehow?"
  },
  {
    "author": "pagvac",
    "avatar": "0367b81839d31a5fa3d7bea79ef71b9e",
    "date": "2009-04-23T19:05:16.000Z",
    "content": "@gat3way: the web server MUST run as root since 'root' is the only OS account available (see contents of <code>/etc/passwd</code> file shown in this post).\n\nThis can be confirmed by retrieving the contents of <code>/usr/local/bin/thttpd.conf</code> using any of the directory traversal vulnerabilities I just released. Notice the line containing <code>user=root</code>:\n\n<pre><code># This section overrides defaults\ndir=/usr/local/www\n#dir=/tmp/www\nuser=root\t# default = nobody\n#logfile=/var/log/thttpd.log\npidfile=/var/run/thttpd.pid\ncgipat=cgi|cfg|sdp|jpg\n# This section _documents_ defaults in effect\n# port=80\nnosymlink\t# default = !chroot\nnovhost\n# nocgipat\n# nothrottles\n# host=0.0.0.0\n# charset=iso-8859-1</code></pre>\n\nHowever, you're probably right that the filesystem is cramfs, which (as you said) would mean that a file upload vuln would NOT help getting our root shell.\n\nFrom http://en.wikipedia.org/wiki/Cramfs:\n\n<blockquote>The file system is intentionally read-only to simplify its design</blockquote>"
  },
  {
    "author": "Ladinu",
    "avatar": "607a87c9234ef15ddb84b675a6a0c07f",
    "date": "2009-04-24T01:33:51.000Z",
    "content": "I just got this camera (same model) and tested out the vuln. It looks like that all linksys cameras have the same password."
  },
  {
    "author": "pagvac",
    "avatar": "0367b81839d31a5fa3d7bea79ef71b9e",
    "date": "2009-04-24T13:19:55.000Z",
    "content": "@Ladinu: thanks a lot for testing. That's very useful to know. I wonder if other Linksys camera models different to the WVC54GCA also come with the same root password?"
  },
  {
    "author": "gat3way",
    "avatar": "8bfed58b974a83cecf91c84e3c2eb6d0",
    "date": "2009-04-24T14:39:12.000Z",
    "content": "Anyway, I'm now running john against the DES-crypted password. We'll see what is going to come out after the weekend. I'm curious about what default root password did Cisco/Linksys guys choose."
  },
  {
    "author": "pagvac",
    "avatar": "0367b81839d31a5fa3d7bea79ef71b9e",
    "date": "2009-04-24T16:43:47.000Z",
    "content": "@gat3way: hehe, im curious too. i've had john running for a while, but no luck yet. last password it tried was 'Tr92m3l', so it's tried relatively-complex passwords already. anyways, please post the password if you leave the cracking session for long enough and finally obtain it ."
  },
  {
    "author": "Ladinu",
    "avatar": "607a87c9234ef15ddb84b675a6a0c07f",
    "date": "2009-04-25T22:26:48.000Z",
    "content": "Talked to a friend who had a different model (CIC-930W). The vuln work for this one too. The root password hash is the same."
  },
  {
    "author": "Bruno",
    "avatar": "56f904629fb4ecda24ea08d0ee1ac199",
    "date": "2009-04-26T23:57:38.000Z",
    "content": "Hi together,\n\nI've found a way to start the telnet daemon (Firmware V1.00R24).\n\n<pre><code>/adm/file.cgi?inject_telnetd</code></pre>\n\n<pre><code>telnet cam\nTrying xxx.xxx.xxx.xxx...\nConnected to cam.\nEscape character is '^]'.\ncam login:  \nLogin timed out after 60 seconds.\nConnection closed by foreign host.</code></pre>\n\nBut not the pwd? What does John say?\n\nGreetings\nBruno"
  },
  {
    "author": "pagvac",
    "avatar": "0367b81839d31a5fa3d7bea79ef71b9e",
    "date": "2009-05-02T23:52:19.000Z",
    "content": "@Bruno: i cannot replicate the steps you provided, although i can confirm the 'inject_telnetd' string is part of the '/adm/file.cgi' binary. I tried accessing the URL you provided after logging in with the 'admin' account and no luck :(\r\n\r\nAm I missing anything?\r\n\r\nbtw, my john session is still running and still no luck. not sure if gat3way managed to get anywhere with his john session?"
  },
  {
    "author": "Bruno",
    "avatar": "56f904629fb4ecda24ea08d0ee1ac199",
    "date": "2009-05-07T09:14:32.000Z",
    "content": "@pagvac: I am so sorry. I tried many things that evening and there was a little 'todo=' missing. I could not remember, but I did it again - found it in my brain after thinking a long time - and here comes the uncut howto after a power on (I tried it twice, please confirm):\n\n1. try a telnet connect to the cam like this:\n\ntelnet IP-OF-CAM\nTrying IP-OF-CAM...\ntelnet: Unable to connect to remote host: Connection refused\nresult: not telnetd on cam after power on - thats standard config.\n\n2. type in that url in your browser:\n\n<pre><code>http://IP-OF-CAM/adm/file.cgi?todo=inject_telnetd</code></pre>\n\nyou have to type in your admin account and pwd for cam-administration. You receive error:\n\n<pre><code>File (null) not found</code></pre>\n\nin your Browser.\n\nDon't care about that and don't power down the cam.\n\n3. try again the telnet connect from step 1\n\n<pre><code>telnet IP-OF-CAM\nTrying IP-OF-CAM...\nConnected to IP-OF-CAM.\nEscape character is '^]'.\ncam login: </code></pre>\n\nHere you are and you are missing the root pwd.  Every user can get the adm-pwd with your tips and every user can start the telnet demon after reading this. Nice feature. Login ist quite a problem."
  },
  {
    "author": "pagvac",
    "avatar": "0367b81839d31a5fa3d7bea79ef71b9e",
    "date": "2009-05-07T14:10:07.000Z",
    "content": "@Bruno: I can confirm that DOES work. that's a very cool backdoor/debug feature which you have discovered! awesomeness"
  },
  {
    "author": "pagvac",
    "avatar": "0367b81839d31a5fa3d7bea79ef71b9e",
    "date": "2009-05-07T16:31:31.000Z",
    "content": "For anyone interested, Bruno eventually figured out the \"telnetd enabling\" feature by\n\n1) parsing the strings of the '/adm/file.cgi' binary using any of the directory traversal vulnerabilities I released in this post and \n\n2) trial and error. ie: experimenting with already-known parameters processed by the 'file.cgi' program such as 'todo' (aforementioned in this post)\n\nFor instance, you can do the following with curl:\n\n<pre><code>$ curl -s --url \"http://192.168.1.115/adm/file.cgi?todo=pwnage&this_file=file.cgi\" -u admin:C4mP4ssw0rd | strings |  grep -i telnet</code></pre>\n\nWhich returns:\n\n<pre><code>/usr/sbin/telnetd &gt; /dev/null 2&gt; /dev/null &\n&lt;head&gt;&lt;title&gt;Open TelnetD&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;&lt;p&gt;&lt;b&gt;&lt;font size=6&gt;Open Telnet Daemon successfully!&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;/body&gt;\ninject_telnetd</code></pre>\n\nNotice the last string returned ('inject_telnetd') which is the value that needs to be assigned to the 'todo' parameter in order to enable the telnet daemon.\n\nI'm guessing there must be a neat way to obtain all parameters processed by '/adm/file.cgi' by analyzing the binary. Using IDA Pro perhaps? the binary is of type 'ELF 32-bit LSB executable, ARM, version 1' if anyone wants to know\n\n<pre><code>$ file file.cgi\nfile.cgi: ELF 32-bit LSB executable, ARM, version 1, dynamically linked (uses shared libs), stripped</code></pre>"
  },
  {
    "author": "Borys",
    "avatar": "d3902c4868cb4ede759e377b3ff8eca8",
    "date": "2009-06-03T15:03:18.000Z",
    "content": "It is possible to run something via opening file with \"|\" at the end?"
  },
  {
    "author": "nick",
    "avatar": "d87e8180176a69ad1f937148d38f4663",
    "date": "2009-10-16T08:32:54.000Z",
    "content": "I used the above to get info about this type of camera off the one I have. Nice work guys! Couple of questions. Has John finished his cogitations yet? Also, how does the camera save its altered config settings if the cramfs file system is read only...? That file must be writable by root surely. The reason I ask is that I want to mod the camera to reduce a motion detection setting (md_sensitivity). The default is ridiculously too sensitive as is widely acknowledged in many forums. I was thinking about trying to recompile the OS using the source off the linksys web site and (with having the learn it...) a cross compiler. However, being able to telnet into the camera as root and simply changing the values (default is 6) of the md sensitivity sounds much easier - providing I have root access (therefore need password) and can actually write to the config file (hence asking about the cramfs file system). Anyone got any thoughts?"
  },
  {
    "author": "Maurice",
    "avatar": "c9558a1a32524b321da5ac79a2bc2348",
    "date": "2009-11-14T10:19:56.000Z",
    "content": "I am still running john to get the password still nothing found.\r\nI want the same as what Nick wants reducing the motion sensibility. There should be a firmware around that is dealing with this issue. Version 1.1.0.0 build 2 look at this forum thread. http://forums.linksysbycisco.com/linksys/board/message?board.id=Cameras&amp;thread.id=10525\r\n\r\nIf I have some luck I will post the password."
  },
  {
    "author": "nick",
    "avatar": "d87e8180176a69ad1f937148d38f4663",
    "date": "2009-12-15T22:35:28.000Z",
    "content": "Maurice, very interesting information. I saw that thread on the forum when it was in its infancy and there was uncertainty about whether the 1.1 firmware was the newer one. Looks like it is, which makes the lack of its addition to the Linksys download area really odd. If they have decided it is stable enough to put on new retail cameras, it should be stable enough to post on the download area for current owners to use. Most strange. I would recommend everyone contact Linksys to ask them to make it available.\r\n\r\nI threw John at the password on a P3 for a week or so with no luck. It was testing 180000 combinations a second and the last passwords were fairly complex. Hence, it appears that the root password is not trivial. Even though this is a \"simple\" DES password, statistics show that for a good password, you need about 1000 P4s working on it for a year in order to guarantee a crack. Hence, a lot of luck is needed if using a single machine! I do wish you luck though. In the meantime, I recommend everyone who is interested in getting their cameras working better contact Linksys regularly to ask about the new firmware."
  },
  {
    "author": "nick",
    "avatar": "d87e8180176a69ad1f937148d38f4663",
    "date": "2009-12-15T22:49:24.000Z",
    "content": "Update....\r\n\r\nKnew I should have checked the linksys website before posting. The new 1.1 firmware is now available in their support area. It is dated 15th June 2009, which I don't think can be the date it was posted on their site, since I looked several times since then and it was not there (just the older one).\r\n\r\nGo get it!!!!"
  },
  {
    "author": "Bruno",
    "avatar": "56f904629fb4ecda24ea08d0ee1ac199",
    "date": "2009-12-16T14:02:11.000Z",
    "content": "The telnetd-injection is still working with the firmware \"1.1.00 build 2\". We still need the password.\r\n\r\nThe revision history told about some security fixing. They disabled the Support of \"Setup Wizzard\".\r\n\r\nA new feature is the proprietary HNAP protocol. You get a xml if you try http://IP-OF-CAM/HNAP1/. Can somebody tell the truth about security of HNAP?"
  },
  {
    "author": "Rogan Dawes",
    "avatar": "0a629042a2fd601584c61e06e7bb983a",
    "date": "2010-08-20T18:16:00.000Z",
    "content": "You have a few options remaining to you.\r\n\r\n1. Try to get a serial console on your camera. This will void any warranties that you have, because you'll have to open it up. You'll also need to get a suitable level convertor, to convert between the usual RS-232 at 12V, to the TTL signalling expected by the camera at 3V.\r\n\r\nThe easiest way to do this is to get a CA-42 cellphone cable, which basically provides a USB to TTL serial convertor. You'll also need to identify the pins on the circuit board that are the serial port. Most likely you'll find a 4 or 5 pin header, or possibly an unpopulated header (just the holes). Identify which ones are ground using a multimeter, one will probably be 3V, and the others will be RX and TX.\r\n\r\nOnce you have a console cable, you will be able to get a shell most likely, because very few manufacturers make you log in on the console.\r\n\r\n2. An alternative is to extract the cramfs filesystem from the firmware, mount it via loopback, copy everything off it into a new directory, delete root's password and set up the telnet daemon to start automatically, then rebuild the cramfs and the firmware. Finally, flash your rebuilt firmware onto the camera.\r\n\r\nIt should not be too difficult to figure out the firmware format, most likely it is the same as that used for the WRT54G and so forth."
  },
  {
    "author": "L0RE",
    "avatar": "27e52d3e4e67cd0afc696d5680872aee",
    "date": "2010-10-06T17:54:47.000Z",
    "content": "No Warenty,. You can Damage your Hardware.  Im Not Responsible... you know such stuff .... i compiled the last Firmware (1.00 R24) With telnet enabled and root password: toor\n\nHappy Linuxing :-). I would be happy Hearing from you"
  },
  {
    "author": "L0RE",
    "avatar": "27e52d3e4e67cd0afc696d5680872aee",
    "date": "2010-10-06T17:56:34.000Z",
    "content": "Sorry i Forgot the most Important The Link http://rapidshare.com/files/423484428/WVC54GCA.bin"
  },
  {
    "author": "VaZso",
    "avatar": "0687cc834b4c73a8fb9c7dc8222f04ad",
    "date": "2010-10-14T20:42:25.000Z",
    "content": "@Rogan Dawes\n\nI have the latest firmware on my WVC54GC v1.1, which says \"V1.26, Feb 03, 2008\". I've tried to re-pack the filesystem, but no luck. First, I've cut the first part of the firmware file (part1) until the filesystem (fs), then the last part (part2) of it. The filesystem itself is a cramfs file of 1511424 bytes. Info: \"Linux Compressed ROM File System data, little endian size 1511424 version #2 sorted_dirs CRC 0x3a60d0db, edition 0, 777 blocks, 288 files\"\n\nI've downloaded and compiled cramfs tools from here: http://sourceforge.net/projects/cramfs/ For the fs, cramfsck tools says: \"file inode has zero size and non-zero offset\"\n\n...and it cannot extract whole of the data (just some of the files).\n\nI've mounted the filesystem as a loop device, copied to another directory, then re-packed it using mkcramfs (I've tried it also without any modifications, just with repacking).\n\nFor the created file, file info says: \"Linux Compressed ROM File System data, little endian size 1511424 version #2 sorted_dirs CRC 0x1b6023e1, edition 0, 777 blocks, 288 files\" Finally, I've copied part1 + fs + part2 together. The file seemed to be correct, but when I've tried to upload it to the webcam, it said after a while: \"Error: Upgrade file format error\" I think the problem is the original cramfs on the device is somehow a bit modified version, or at least I don't know what \"file inode has zero size and non-zero offset\" means or how can I make a suitable image for the device. Naturally, the fs begins on a different address in this firmware than the one was mentioned here. Has anybody any idea how to go on?"
  },
  {
    "author": "Bruno",
    "avatar": "56f904629fb4ecda24ea08d0ee1ac199",
    "date": "2010-11-14T19:59:29.000Z",
    "content": "@LORE, would you be so kind and give us a short howto compile and build the firmware?\r\n\r\nThat would be very helpful for me."
  },
  {
    "author": "oliver",
    "avatar": "b849691b80e6a43559c9f8f57e183a00",
    "date": "2011-01-26T11:25:31.000Z",
    "content": "I found that http://nurds-r-us.blogspot.com/ also was hacking around with this cam, and being curious about both camera's mentioned I donwloaded both GPL source packages. Appearantly, linksys bought the IP from sercomm (sitecom) as their version of the package, albeit 125mb larger (i think toolchain sources are included), is filled with license files indicating that it is in fact, from sercomm.\r\n\r\nSo the linksys cam is actually a sercomm cam.\r\n\r\nI suppose both gpl archives should be buildable and create a working binary that can be flashed.\r\n\r\nBrowsing through both packages, it seems to all come from cadenux, a ucLinux specialist service.\r\nStrangly, under userland/cron/ is a file called uClinux-dist-20020220.tar.gz (combined with some txt file about it) which probably should be there, and is the cause for the 175mb binary.\r\n\r\nInterestingly however is, that the sitecom GPL package has only left some binary object files for certain modules, gpio, led, switch etc, but the linksys version does include these files.\r\nWiFi seems to be binary only for both unfortunatly, though personally i'd prefer a lan only version, ideally PoE.\r\n\r\nJust some food for thought."
  },
  {
    "author": "supbro",
    "avatar": "d582329c7d761296d319bc37eeea2b69",
    "date": "2011-05-19T23:46:14.000Z",
    "content": "I installed LORE's image on my WVC54GCA which had the latest official software, and now I have root! cool! But the rapidshare link he posted was no longer valid, here's the one I used:\r\n\r\nhttp://rapidshare.com/files/424551784/WVC54GCA.bin"
  }
]